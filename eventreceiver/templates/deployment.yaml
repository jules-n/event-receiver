apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment.name}}
  labels:
    app: event-receiver-app
    workload: {{.Values.deployment.name}}
spec:
  replicas: {{.Values.deployment.replicaCount}}
  selector:
    matchLabels:
      app: event-receiver-app
      workload: {{.Values.deployment.name}}
  template:
    metadata:
      labels:
        app: event-receiver-app
        workload: {{.Values.deployment.name}}
    spec:
      containers:
        - name: {{.Values.deployment.name}}
          image: {{.Values.deployment.image.name}}
          ports:
            - containerPort: {{.Values.deployment.port}}
          env:
            - name: TENANT_ID_ATTRIBUTE_KEY
              value: "{{ .Values.deployment.tenant.id.attribute.key}}"
            - name: MONGODB_URI
              value: "{{ .Values.deployment.mongo.uri}}"
            - name: MONGODB_DATABASE
              value: "{{ .Values.deployment.mongo.database}}"
            - name: REDIS_HOST
              value: "{{ .Values.deployment.redis.host}}"
            - name: REDIS_PORT
              value: "{{ .Values.deployment.redis.port}}"
            - name: REDIS_TIMEOUT
              value: "{{ .Values.deployment.redis.timeout}}"
            - name: REDIS_EXPIRATION
              value: "{{ .Values.deployment.redis.expiration}}"
            - name: TO_DEVICE_SERVICE_TOPIC
              value: "{{ .Values.deployment.topic.toDeviceService}}"
            - name: PROJECT_ID
              value: "{{ .Values.deployment.projectId}}"
            - name: TENANTS_SENDING_DATA
              value: "{{ .Values.deployment.tenants.sendingData}}"
            - name: KAFKA_PRODUCER_BOOTSTRAP_SERVER
              value: "{{ .Values.deployment.kafka.producer.bootstrap.server}}"
            - name: SERVER_PORT
              value: "{{ .Values.deployment.port}}"